/*
Copyright (c) Anthony Beaumont
This source code is licensed under the Apache 2.0 License
found in the LICENSE file in the root directory of this source tree.
*/

//‚ö†Ô∏è This file was auto generated

import { load, reference } from "../../util/load.js";

const namespace = {
  //üìñ https://learn.microsoft.com/en-us/uwp/api/windows.applicationmodel.background
  name: "windows.applicationmodel.background",
  externalReference: [
    "Windows.Devices.Sensors",
    "Windows.ApplicationModel.Activation",
    "Windows.Devices.Bluetooth.Advertisement",
    "Windows.Devices.Bluetooth",
    "Windows.Storage.Provider",
    "Windows.Devices.Bluetooth.GenericAttributeProfile",
    "Windows.Devices.Bluetooth.Background",
    "Windows.Devices.Geolocation",
    "Windows.System",
    "Windows.ApplicationModel.Calls.Background",
    "Windows.Networking",
    "Windows.Networking.Sockets",
    "Windows.Devices.SmartCards",
    "Windows.Devices.Sms",
    "Windows.Storage",
    "Windows.UI.Notifications",
  ]
};

export const {
  AlarmAccessStatus,
  ApplicationTriggerResult,
  BackgroundAccessRequestKind,
  BackgroundAccessStatus,
  BackgroundTaskCancellationReason,
  BackgroundTaskThrottleCounter,
  BackgroundWorkCostValue,
  CustomSystemEventTriggerRecurrence,
  DeviceTriggerResult,
  LocationTriggerType,
  MediaProcessingTriggerResult,
  SystemConditionType,
  SystemTriggerType,
  ActivitySensorTrigger,
  AlarmApplicationManager,
  AppBroadcastTrigger,
  AppBroadcastTriggerProviderInfo,
  ApplicationTrigger,
  ApplicationTriggerDetails,
  AppointmentStoreNotificationTrigger,
  BackgroundExecutionManager,
  BackgroundTaskBuilder,
  BackgroundTaskCompletedEventArgs,
  BackgroundTaskDeferral,
  BackgroundTaskProgressEventArgs,
  BackgroundTaskRegistration,
  BackgroundTaskRegistrationGroup,
  BackgroundWorkCost,
  BluetoothLEAdvertisementPublisherTrigger,
  BluetoothLEAdvertisementWatcherTrigger,
  CachedFileUpdaterTrigger,
  CachedFileUpdaterTriggerDetails,
  ChatMessageNotificationTrigger,
  ChatMessageReceivedNotificationTrigger,
  CommunicationBlockingAppSetAsActiveTrigger,
  ContactStoreNotificationTrigger,
  ContentPrefetchTrigger,
  ConversationalAgentTrigger,
  CustomSystemEventTrigger,
  DeviceConnectionChangeTrigger,
  DeviceManufacturerNotificationTrigger,
  DeviceServicingTrigger,
  DeviceUseTrigger,
  DeviceWatcherTrigger,
  EmailStoreNotificationTrigger,
  GattCharacteristicNotificationTrigger,
  GattServiceProviderTrigger,
  GattServiceProviderTriggerResult,
  GeovisitTrigger,
  IBackgroundCondition,
  IBackgroundTask,
  IBackgroundTaskInstance,
  IBackgroundTaskInstance2,
  IBackgroundTaskInstance4,
  IBackgroundTaskRegistration,
  IBackgroundTaskRegistration2,
  IBackgroundTaskRegistration3,
  IBackgroundTrigger,
  LocationTrigger,
  MaintenanceTrigger,
  MediaProcessingTrigger,
  MobileBroadbandDeviceServiceNotificationTrigger,
  MobileBroadbandPcoDataChangeTrigger,
  MobileBroadbandPinLockStateChangeTrigger,
  MobileBroadbandRadioStateChangeTrigger,
  MobileBroadbandRegistrationStateChangeTrigger,
  NetworkOperatorDataUsageTrigger,
  NetworkOperatorHotspotAuthenticationTrigger,
  NetworkOperatorNotificationTrigger,
  PaymentAppCanMakePaymentTrigger,
  PhoneTrigger,
  PushNotificationTrigger,
  RcsEndUserMessageAvailableTrigger,
  RfcommConnectionTrigger,
  SecondaryAuthenticationFactorAuthenticationTrigger,
  SensorDataThresholdTrigger,
  SmartCardTrigger,
  SmsMessageReceivedTrigger,
  SocketActivityTrigger,
  StorageLibraryChangeTrackerTrigger,
  StorageLibraryContentChangedTrigger,
  SystemCondition,
  SystemTrigger,
  TetheringEntitlementCheckTrigger,
  TimeTrigger,
  ToastNotificationActionTrigger,
  ToastNotificationHistoryChangedTrigger,
  UserNotificationChangedTrigger,
  WiFiOnDemandHotspotConnectTrigger,
  WiFiOnDemandHotspotUpdateMetadataTrigger,
} = load(namespace.name);

reference(namespace.externalReference);
